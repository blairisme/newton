/*
 * MIT License (c)
 *
 * This work is licensed under the MIT License. To view a copy of this
 * license, visit
 *
 *      https://opensource.org/licenses/MIT
 *
 * Author: Blair Butterworth
 * Author: Xiaolong Chen
 */

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.akhikhl.gretty:gretty:2.0.0'
    }
 }

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'org.akhikhl.gretty'

dependencies {
    compile project(':application:common')
    compile project(':application:bridge')
    compile project(':application:plugins:WeatherDataProvider')
    compile project(':application:plugins:FizzyoDataProvider')

    compile group: 'javax.servlet', name: 'jstl', version: '1.2'
    compile group: 'javax.inject', name: 'javax.inject', version: '1'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.thymeleaf', name: 'thymeleaf', version: '3.0.9.RELEASE'
    compile group: 'org.thymeleaf', name: 'thymeleaf-spring5', version: '3.0.9.RELEASE'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity4', version: '3.0.2.RELEASE'

    compile group: 'org.springframework', name: 'spring-web', version: '5.0.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version: '5.0.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-orm', version: '5.0.7.RELEASE'

    compile group: 'org.springframework.security', name: 'spring-security-core', version: '5.0.6.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-web', version: '5.0.6.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-config', version: '5.0.6.RELEASE'

    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    compile group: 'org.ocpsoft.prettytime', name: 'prettytime', version: '4.0.1.Final'

    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.3.1.Final'
    compile group: 'org.hibernate', name: 'hibernate-search-orm', version: '5.10.2.Final'
    compile group: 'org.hibernate', name: 'hibernate-validator-cdi', version: '6.0.11.Final'

    compile group: 'com.h2database', name: 'h2', version: '1.4.195'
    compile group: 'com.fasterxml.jackson.core', name:'jackson-databind', version: '2.9.6'
    compile group: 'net.sourceforge.javacsv', name: 'javacsv', version: '2.0'

    compile group: 'io.jsonwebtoken', name:'jjwt', version:'0.9.1'

    testCompile group: 'junit', name:'junit', version: '4.12'
    testCompile group: 'org.mockito', name:'mockito-core', version: '2.7.22'
    testCompile group: 'org.springframework', name: 'spring-test', version: '5.0.7.RELEASE'
}

task updatePythonPlugin(type: Copy, dependsOn: ':application:plugins:python:jar') {
    from project(':application:plugins:python').collect{it.tasks.withType(Jar)}
    into project.file('src/main/resources/plugins/processor')
    rename '(.*)-(.*).jar', '$1.jar'
}
project.tasks.war.dependsOn updatePythonPlugin

task updateJupyterPlugin(type: Copy, dependsOn: ':application:plugins:jupyter:jar') {
    from project(':application:plugins:jupyter').collect{it.tasks.withType(Jar)}
    into project.file('src/main/resources/plugins/processor')
    rename '(.*)-(.*).jar', '$1.jar'
}
project.tasks.war.dependsOn updateJupyterPlugin

task updateFizzyoDataProviderJar(type: Copy, dependsOn: ':application:plugins:FizzyoDataProvider:jar'){
    from project(':application:plugins:FizzyoDataProvider').collect{it.tasks.withType(Jar)}
    into project.file('src/main/resources/plugins/data')
    rename '(.*)-(.*).jar', '$1.jar'
}
project.tasks.war.dependsOn updateFizzyoDataProviderJar

task updateWeatherDataProviderJar(type: Copy, dependsOn: ':application:plugins:WeatherDataProvider:jar'){
    from project(':application:plugins:WeatherDataProvider').collect{it.tasks.withType(Jar)}
    into project.file('src/main/resources/plugins/data')
    rename '(.*)-(.*).jar', '$1.jar'
}
project.tasks.war.dependsOn updateWeatherDataProviderJar

gretty {
    servletContainer = 'jetty9.4'
    contextPath = '/'
    httpPort = 8090
    jvmArgs = ['-Dnewton.profile=' + getProperty('run.profile')]
    jacocoEnabled = false
}

checkstyle {
  sourceSets = [project.sourceSets.main]
}

jacocoTestReport {
  reports {
    xml.enabled true
    html.enabled = true
  }
}

task report(dependsOn: ['jacocoTestReport']){
}

//project.tasks.check.dependsOn jacocoTestCoverageVerification

task appStartDaemon(dependsOn: 'appBeforeIntegrationTest'){
}

task appStopDaemon(dependsOn: 'appAfterIntegrationTest'){
}

/*
jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        minimum = 0.5
      }
    }
  }
}
*/
