/*
 * MIT License (c)
 *
 * This work is licensed under the MIT License. To view a copy of this
 * license, visit
 *
 *      https://opensource.org/licenses/MIT
 *
 * Author: Ziad Al Halabi
 * Author: Blair Butterworth
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


bootJar {
    baseName = 'engine'
    version =  '0.1.0'
}

dependencies {
    compile project(':application:bridge')
    compile project(':application:sdk')

    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    testCompile group: 'junit', name:'junit', version: '4.12'
    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
}

bootRun {
    main = 'org.ucl.newton.slave.application.ApplicationLauncher'
}

task slaveStart(dependsOn: ['assemble', 'bootRun']) {
}

task slaveStartDebug(dependsOn: ['assemble', 'bootRun']) {
    gradle.taskGraph.whenReady { graph ->
        if (graph.hasTask(slaveStartDebug)) {
            bootRun {
                jvmArgs=["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=6006"]
            }
        }
    }
}
